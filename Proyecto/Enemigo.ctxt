#BlueJ class context
comment0.params=arch\ enem\ attk\ m
comment0.target=Enemigo(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Constructor\ de\ enemigo\ donde\ se\ asigna\ el\ nombre\r\n\ del\ archivo\ principal,\ el\ archivo\ que\ necesita\ para\ \ caminar,\r\n\ atacar,\ y\ morir.\r\n\ @param\ arch\ nombre\ del\ archivo\ completo\ del\ enemigo.\r\n\ @param\ enem\ nombre\ del\ enemigo\ que\ se\ va\ a\ convocar.\r\n\ @param\ attk\ cadena\ con\ el\ tipo\ de\ ataque\ que\ hara\ el\ enemigo.\r\n\ @param\ m\ cadena\ con\ el\ tipo\ de\ muerte\ del\ enemigo.\r\n
comment1.params=tamX\ tamY\ numImg
comment1.target=void\ spriteCaminar(int[],\ int[],\ int)
comment1.text=\r\n\ Metodo\ que\ al\ momento\ de\ ser\ llamado.\r\n\ el\ enemigo\ empieza\ a\ caminar\ y\ va\ cambiando\ cada\ imagen.\r\n\ respecto\ al\ numero\ de\ imagenes\ se\ tengan\ guardadas\ en\ el\ arreglo.\r\n\ \r\n\ @param\ tamX[]\ Arreglo\ de\ tamanio\ de\ las\ imagenes\ en\ X.\r\n\ @param\ tamY[]\ Arreglo\ de\ tamanio\ de\ las\ imagenes\ en\ Y.\r\n\ @param\ numImg\ int,\ con\ el\ numero\ de\ imagenes.\r\n
comment2.params=attkX\ attkY\ numImg
comment2.target=void\ spriteAtacar(int[],\ int[],\ int)
comment2.text=\r\n\ Metodo\ que\ al\ momento\ de\ ser\ llamado\r\n\ el\ enemigo\ empieza\ la\ animacion\ de\ atacar\ y\ va\ cambiando\ cada\ imagen\r\n\ respecto\ al\ numero\ de\ imagenes\ se\ tengan\ guardadas\ en\ el\ arreglo\r\n\ @param\ attkX[]\ arreglo\ con\ el\ tamanio\ de\ imagenes\ por\ cada\ enemigo\ en\ X.\r\n\ @param\ attkY[]\ arreglo\ con\ el\ tamanio\ de\ imagenes\ por\ cada\ enemigo\ en\ Y.\r\n\ @param\ numImg\ int,\ con\ el\ numero\ de\ imagenes.\r\n
comment3.params=killX\ killY\ numImg
comment3.target=void\ spriteMorir(int[],\ int[],\ int)
comment3.text=\r\n\ Metodo\ que\ al\ momento\ de\ ser\ llamado\r\n\ el\ enemigo\ empieza\ la\ animacion\ de\ morir\ y\ va\ cambiando\ cada\ imagen\r\n\ respecto\ al\ numero\ de\ imagenes\ se\ tengan\ guardadas\ en\ el\ arreglo\r\n\ @param\ killX[]\ arreglo\ con\ el\ tamanio\ de\ imagenes\ por\ cada\ enemigo\ en\ X.\r\n\ @param\ killY[]\ arreglo\ con\ el\ tamanio\ de\ imagenes\ por\ cada\ enemigo\ en\ Y.\r\n\ @param\ numImg\ int,\ con\ el\ numero\ de\ imagenes.\r\n
comment4.params=y
comment4.target=void\ checkLimit(int)
comment4.text=\r\n\ Metodo\ que\ revisa\ los\ limites\ donde\ se\ encuentra\ el\ enemigo,\r\n\ al\ llegar\ al\ borde\ de\ la\ pantalla\ del\ lado\ izquierdo,\ reinicia\r\n\ y\ comienza\ a\ caminar\ de\ nuevo\ de\ lado\ derecho.\r\n\ @param\ y\ toma\ la\ coordenada\ Y\ que\ se\ asigne\ para\ que\ no\ pase\ por\ el\ limite.\r\n
comment5.params=
comment5.target=void\ reiniciaContador()
comment5.text=\r\n\ Metodo\ que\ reinicia\ el\ contador\ de\ cada\ enemigo\ distinto,\r\n\ correspondiente\ a\ la\ imagen.\r\n\ @param\ cont\ reinicia\ el\ contador\ a\ 0\ para\ el\ enemigo\ Jefe.\r\n
numComments=6
